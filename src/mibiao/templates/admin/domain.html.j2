<script id="domain" type="text/x-template">
  <div>
    <el-button type="primary" class="mb-1" @click="handleCreate">Ê∑ªÂä†ÂüüÂêç</el-button>
    <el-table :data="tableData" style="width: 100%" height="666">
      <el-table-column fixed prop="name" label="ÂüüÂêç" width="150"></el-table-column>
      <el-table-column prop="is_hide" label="ÊòØÂê¶ÈöêËóè" width="120">
        <template #default="scope">
          @{ scope.row.is_hide ? 'Â∑≤ÈöêËóè' : 'ÂàóË°®ÂèØËßÅüëÄ'}
        </template>
      </el-table-column>
      <el-table-column prop="rank" label="ÊéíÂ∫è" width="80"></el-table-column>
      <el-table-column prop="description" label="ÊèèËø∞" width="400"></el-table-column>
      <el-table-column prop="display_created_at" label="ÂàõÂª∫Êó∂Èó¥" width="180"></el-table-column>
      <el-table-column prop="display_updated_at" label="Êõ¥Êñ∞Êó∂Èó¥" width="180"></el-table-column>
      <el-table-column fixed="right" label="Êìç‰Ωú" width="100">
        <template #default="scope">
          <el-button link type="primary" size="small" @click="handleEdit(scope.row)">ÁºñËæë</el-button>
          <el-button link type="danger" size="small" @click="handleDelete(scope.row)">Âà†Èô§</el-button>
        </template>
      </el-table-column>
    </el-table>

    <!--Êñ∞Â¢û-->
    <el-dialog v-model="isCreateDialogVisible" title="Êñ∞Â¢ûÂüüÂêç" width="30%" :beforeClose="handleCreateDialogClose">
      <el-form :model="createFormData" label-width="auto" label-position="right">
        <el-form-item label="ÂüüÂêç">
          <el-input v-model="createFormData.name" placeholder="example.com"/>
        </el-form-item>
        <el-form-item label="LOGO URL">
          <el-input
              v-model="createFormData.logo_url"
              placeholder="ËØ∑ËæìÂÖ•LOGOÁöÑURLÔºå‰æãÂ¶ÇÔºöhttps://www.nodeseek.com/static/image/favicon/android-chrome-192x192.png"
          />
        </el-form-item>
        <el-form-item label="Ê†áÁ≠æ">
          <el-select v-model="createFormData.tag_ids" multiple placeholder="ËØ∑ÈÄâÊã©Ê†áÁ≠æ" style="width: 240px">
            <template #label="{ label, value }">
              <span>@{ label }</span>
            </template>
            <el-option
                v-for="tag in tags"
                :key="tag.id"
                :label="tag.name"
                :value="tag.id"
            >
              <div class="flex items-center">
                <span>@{ tag.name }</span>
              </div>
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="ÊòØÂê¶ÈöêËóè">
          <el-switch v-model="createFormData.is_hide"/>
        </el-form-item>
        <el-form-item label="ÊéíÂ∫è">
          <el-input-number v-model="createFormData.rank"/>
        </el-form-item>
        <el-form-item label="ÊèèËø∞">
          <el-input v-model="createFormData.description" :rows="6" type="textarea" placeholder="ËØ∑ËæìÂÖ•Ôºö"/>
        </el-form-item>
        <el-form-item label="ÂîÆ‰ª∑">
          <el-input v-model="createFormData.selling_price" placeholder="ËØ∑ËæìÂÖ•ÂîÆ‰ª∑ÔºåÂ¶ÇÔºö100ÂÖÉ"/>
        </el-form-item>
        <el-form-item label="Áª≠Ë¥π">
          <el-input v-model="createFormData.renewal_price" placeholder="ËØ∑ËæìÂÖ•Áª≠Ë¥πÔºåÂ¶ÇÔºö59ÂÖÉ"/>
        </el-form-item>
        <el-form-item label="‰∫§ÊòìÊñπÂºè">
          <el-input v-model="createFormData.transaction_method" placeholder="ËØ∑ËæìÂÖ•‰∫§ÊòìÊñπÂºèÔºåÂ¶ÇÔºöPUSH"/>
        </el-form-item>
        <el-divider border-style="dashed"></el-divider>
      </el-form>
      <template #footer>
      <span class="dialog-footer">
        <el-button @click="handleCreateDialogCancel">ÂèñÊ∂à</el-button>
        <el-button type="primary" @click="handleCreateDialogSubmit">Êèê‰∫§</el-button>
      </span>
      </template>
    </el-dialog>

    <!--ÁºñËæë-->
    <el-dialog v-model="isEditDialogVisible" title="ÁºñËæëÂüüÂêç" width="30%" :beforeClose="handleEditDialogClose">
      <el-form :model="editFormData" label-width="auto" label-position="right">
        <el-form-item label="ÂüüÂêç">
          <el-input v-model="editFormData.name" placeholder="example.com"/>
        </el-form-item>
        <el-form-item label="LOGO URL">
          <el-input
              v-model="editFormData.logo_url"
              placeholder="ËØ∑ËæìÂÖ•LOGOÁöÑURLÔºå‰æãÂ¶ÇÔºöhttps://www.nodeseek.com/static/image/favicon/android-chrome-192x192.png"
          />
        </el-form-item>
        <el-form-item label="Ê†áÁ≠æ">
          <el-select v-model="editFormData.tag_ids" multiple placeholder="ËØ∑ÈÄâÊã©Ê†áÁ≠æ" style="width: 240px">
            <template #label="{ label, value }">
              <span>@{ label }</span>
            </template>
            <el-option
                v-for="tag in tags"
                :key="tag.id"
                :label="tag.name"
                :value="tag.id"
            >
              <div class="flex items-center">
                <span>@{ tag.name }</span>
              </div>
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="ÊòØÂê¶ÈöêËóè">
          <el-switch v-model="editFormData.is_hide"/>
        </el-form-item>
        <el-form-item label="ÊéíÂ∫è">
          <el-input-number v-model="editFormData.rank"/>
        </el-form-item>
        <el-form-item label="ÊèèËø∞">
          <el-input v-model="editFormData.description" :rows="6" type="textarea" placeholder="ËØ∑Áî®‰∏ÄÊÆµËØùÊèèËø∞ÂÆÉ"/>
        </el-form-item>
        <el-form-item label="ÂîÆ‰ª∑">
          <el-input v-model="editFormData.selling_price" placeholder="ËØ∑ËæìÂÖ•ÂîÆ‰ª∑ÔºåÂ¶ÇÔºö100ÂÖÉ"/>
        </el-form-item>
        <el-form-item label="Áª≠Ë¥π">
          <el-input v-model="editFormData.renewal_price" placeholder="ËØ∑ËæìÂÖ•Áª≠Ë¥πÔºåÂ¶ÇÔºö59ÂÖÉ"/>
        </el-form-item>
        <el-form-item label="‰∫§ÊòìÊñπÂºè">
          <el-input v-model="editFormData.transaction_method" placeholder="ËØ∑ËæìÂÖ•‰∫§ÊòìÊñπÂºèÔºåÂ¶ÇÔºöPUSH"/>
        </el-form-item>
        <el-divider border-style="dashed"></el-divider>
      </el-form>
      <template #footer>
      <span class="dialog-footer">
        <el-button @click="handleEditDialogCancel">ÂèñÊ∂à</el-button>
        <el-button type="primary" @click="handleEditDialogSubmit">‰øùÂ≠ò</el-button>
      </span>
      </template>
    </el-dialog>

    <!--Âà†Èô§-->
    <el-dialog v-model="isDeleteDialogVisible" title="Á°ÆÂÆöË¶ÅÂà†Èô§ÂêóÔºü" width="30%" :beforeClose="handleDeleteDialogClose">
      <el-form :model="deleteFormData" :disabled="true" label-width="auto" label-position="right">
        <el-form-item label="ÂüüÂêç">
          <el-input v-model="deleteFormData.name"/>
        </el-form-item>
        <el-form-item label="LOGO URL">
          <el-input
              v-model="deleteFormData.logo_url"
              placeholder="‰ªÄ‰πà‰πüÊ≤°ÂÜô"
          />
        </el-form-item>
        <el-form-item label="Ê†áÁ≠æ">
          <el-select v-model="deleteFormData.tag_ids" multiple placeholder="Êó†Ê†áÁ≠æ" style="width: 240px">
            <template #label="{ label, value }">
              <span>@{ label }</span>
            </template>
            <el-option
                v-for="tag in tags"
                :key="tag.id"
                :label="tag.name"
                :value="tag.id"
            >
              <div class="flex items-center">
                <span>@{ tag.name }</span>
              </div>
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="ÊòØÂê¶ÈöêËóè">
          <el-switch v-model="deleteFormData.is_hide"/>
        </el-form-item>
        <el-form-item label="ÊéíÂ∫è">
          <el-input-number v-model="deleteFormData.rank"/>
        </el-form-item>
        <el-form-item label="ÊèèËø∞">
          <el-input v-model="deleteFormData.description" :rows="6" type="textarea" placeholder="‰ªÄ‰πà‰πüÊ≤°ÂÜô"/>
        </el-form-item>
        <el-form-item label="ÂîÆ‰ª∑">
          <el-input v-model="deleteFormData.selling_price" placeholder="‰ªÄ‰πà‰πüÊ≤°ÂÜô"/>
        </el-form-item>
        <el-form-item label="Áª≠Ë¥π">
          <el-input v-model="deleteFormData.renewal_price" placeholder="‰ªÄ‰πà‰πüÊ≤°ÂÜô"/>
        </el-form-item>
        <el-form-item label="‰∫§ÊòìÊñπÂºè">
          <el-input v-model="deleteFormData.transaction_method" placeholder="‰ªÄ‰πà‰πüÊ≤°ÂÜô"/>
        </el-form-item>
        <el-divider border-style="dashed"></el-divider>
      </el-form>
      <template #footer>
      <span class="dialog-footer">
        <el-button @click="handleDeleteDialogCancel">ÂèñÊ∂à</el-button>
        <el-button type="primary" @click="handleDeleteDialogSubmit">Á°ÆÂÆö</el-button>
      </span>
      </template>
    </el-dialog>
  </div>
</script>

<script>
  const domain_component = {
    template: `#domain`,
    delimiters: ['@{', '}'],
    setup() {
      onMounted(async () => {
        await refreshTableData();
        await fetchTags();
      });

      const tags = ref([]);

      async function fetchTags() {
        const {tag_list} = await getTagList();
        tags.value = tag_list;
      }

      /* ÂàóË°® */
      const tableData = ref([]);

      async function refreshTableData() {
        const {domain_list} = await getDomainList();
        tableData.value = domain_list;
      }

      /* Êñ∞Â¢û */
      const createFormData = ref({
        name: '',
        logo_url: '',
        tag_ids: [],
        rank: 0,
        description: '',
        is_hide: false,
      });
      const isCreateDialogVisible = ref(false);

      async function handleCreate() {
        isCreateDialogVisible.value = true;
      }

      async function handleCreateDialogClose(done) {
        await handleCreateDialogCancel();
        done();
      }

      async function handleCreateDialogCancel() {
        isCreateDialogVisible.value = false;
        createFormData.value = {};
      }

      async function handleCreateDialogSubmit() {
        await createDomain(JSON.stringify({domain: createFormData.value}));
        await refreshTableData();
        ElMessage({message: 'Â∑≤Êñ∞Â¢ûÔºÅ', type: 'success'});
        await handleCreateDialogCancel();
      }

      /* ÁºñËæë */
      const editFormData = ref({
        id: 0,
        name: '',
        logo_url: '',
        tag_ids: [],
        rank: 0,
        description: '',
        selling_price: '',
        renewal_price: '',
        transaction_method: '',
        is_hide: false,
      });
      const isEditDialogVisible = ref(false);

      async function handleEdit(tableRowData) {
        editFormData.value = Object.assign({}, tableRowData);
        isEditDialogVisible.value = true;
      }

      async function handleEditDialogClose(done) {
        await handleEditDialogCancel();
        done();
      }

      async function handleEditDialogCancel() {
        isEditDialogVisible.value = false;
        editFormData.value = {};
      }

      async function handleEditDialogSubmit() {
        await updateDomain(
            editFormData.value.id,
            JSON.stringify({domain: editFormData.value})
        );
        await refreshTableData();
        ElMessage({message: 'Â∑≤‰øùÂ≠òÔºÅ', type: 'success'});
        await handleEditDialogCancel();
      }

      /* Âà†Èô§*/
      const deleteFormData = ref({
        id: 0,
        name: '',
        logo_url: '',
        tag_ids: [],
        rank: 0,
        description: '',
        selling_price: '',
        renewal_price: '',
        transaction_method: '',
        is_hide: false,
      });
      const isDeleteDialogVisible = ref(false);

      async function handleDelete(tableRowData) {
        deleteFormData.value = Object.assign({}, tableRowData);
        isDeleteDialogVisible.value = true;
      }

      async function handleDeleteDialogClose(done) {
        await handleDeleteDialogCancel();
        done();
      }

      async function handleDeleteDialogCancel() {
        isDeleteDialogVisible.value = false;
        deleteFormData.value = {};
      }

      async function handleDeleteDialogSubmit() {
        await deleteDomain(deleteFormData.value.id);
        await refreshTableData();
        ElMessage({message: 'Âà†Èô§ÊàêÂäüÔºÅ', type: 'success'});
        await handleDeleteDialogCancel();
      }

      return {
        tags,
        tableData,

        createFormData,
        isCreateDialogVisible,
        handleCreate,
        handleCreateDialogClose,
        handleCreateDialogCancel,
        handleCreateDialogSubmit,

        editFormData,
        isEditDialogVisible,
        handleEdit,
        handleEditDialogClose,
        handleEditDialogCancel,
        handleEditDialogSubmit,

        deleteFormData,
        isDeleteDialogVisible,
        handleDelete,
        handleDeleteDialogClose,
        handleDeleteDialogCancel,
        handleDeleteDialogSubmit,
      };
    },
  };

  routes.push({
    path: '/domain',
    name: 'domain',
    title: 'ÂüüÂêçÁÆ°ÁêÜ',
    component: domain_component,
  });
</script>